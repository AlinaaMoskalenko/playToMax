{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/createClass.js","scripts/table.js","index.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js"],"names":["_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","CELL_CONTENT_ARRAY","CELL_BACKGROUND_ARRAY","Table","rootElement","instance","Constructor","TypeError","_classCallCheck","this","arrayOfFruit","render","protoProps","staticProps","value","id","title","x","y","deleteChosenCell","findTheSameCell","_this","forEach","fruit","indexX","indexY","conditionHandler","j","_this2","chosenCell","document","getElementById","concat","parentNode","removeChild","removeEventListener","event","getChosenCell","splice","updateArrayOfFruit","_this3","_ref","updateTable","_this4","wrapper","createElement","classList","add","elementTable","cell","setAttribute","addEventListener","random_index","Math","floor","random","textContent","style","backgroundColor","arr","push","appendChild","prototype","querySelector"],"mappings":"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","file":"static/js/main.e7137a56.chunk.js","sourcesContent":["function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","const CELL_CONTENT_ARRAY = ['apple', 'orange', 'lemon', 'peach', 'plum'];\r\nconst CELL_BACKGROUND_ARRAY = ['rgba(0, 128, 0, 0.5)',\r\n    'rgba(255, 140, 0, 0.5)',\r\n    'rgba(255, 255, 0, 0.5)',\r\n    'rgba(255, 68, 0, 0.5)',\r\n    'rgba(128, 0, 128, 0.5)'];\r\n\r\nexport class Table {\r\n    constructor(rootElement) {\r\n        this.rootElement = rootElement;\r\n        this.arrayOfFruit = [];\r\n        this.render();\r\n    }\r\n\r\n    conditionHandler(id, title, x, y, i) {\r\n        this.deleteChosenCell(i, id);\r\n        this.findTheSameCell(x, y, title);\r\n    }\r\n\r\n    findTheSameCell(x, y, title) {\r\n        this.arrayOfFruit.forEach((fruit, i) => {\r\n            if (fruit.indexX === x - 1 && fruit.indexY === y && fruit.title === title)\r\n                this.conditionHandler(fruit.id, fruit.title, fruit.indexX, fruit.indexY, i);\r\n\r\n            if (fruit.indexX === x + 1 && fruit.indexY === y && fruit.title === title)\r\n                this.conditionHandler(fruit.id, fruit.title, fruit.indexX, fruit.indexY, i);\r\n\r\n            if (fruit.indexX === x && fruit.indexY === y - 1 && fruit.title === title)\r\n                this.conditionHandler(fruit.id, fruit.title, fruit.indexX, fruit.indexY, i);\r\n\r\n            if (fruit.indexX === x && fruit.indexY === y + 1 && fruit.title === title)\r\n                this.conditionHandler(fruit.id, fruit.title, fruit.indexX, fruit.indexY, i);\r\n        });\r\n    }\r\n\r\n    updateArrayOfFruit() {\r\n        let i = 0;\r\n        let j = 0;\r\n        this.arrayOfFruit.forEach((fruit) => {\r\n            if (j === 5) {\r\n                j = 0;\r\n                ++i;\r\n            }\r\n            fruit.indexX = j++;\r\n            fruit.indexY = i;\r\n        });\r\n    }\r\n\r\n    deleteChosenCell(i, id) {\r\n        this.chosenCell = document.getElementById(`${id}`);\r\n        this.chosenCell.parentNode.removeChild(this.chosenCell);\r\n        this.chosenCell.removeEventListener('click', (event) => this.getChosenCell(event));\r\n        this.arrayOfFruit.splice(i, 1);\r\n    }\r\n\r\n    updateTable(x, y, title) {\r\n        this.findTheSameCell(x, y, title);\r\n        this.updateArrayOfFruit();\r\n    }\r\n\r\n    getChosenCell(event) {\r\n        this.arrayOfFruit.forEach((fruit, i) => {\r\n            if (fruit.id === +event.target.id) {\r\n                const [id, title, x, y] = [fruit.id, fruit.title, fruit.indexX, fruit.indexY];\r\n                this.deleteChosenCell(i, id);\r\n                this.updateTable(x, y, title);\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        this.wrapper = document.createElement('div');\r\n        this.wrapper.classList.add('wrapper');\r\n\r\n        this.elementTable = document.createElement('div');\r\n        this.elementTable.classList.add('table');\r\n\r\n        let id = 0;\r\n\r\n        for (let i = 0; i < 7; i++) {\r\n            for (let j = 0; j < 5; j++) {\r\n\r\n                this.cell = document.createElement('div');\r\n                this.cell.classList.add('table__cell');\r\n                this.cell.setAttribute('id', id);\r\n\r\n                this.cell.addEventListener('click', (event) => this.getChosenCell(event));\r\n\r\n                let random_index = Math.floor(Math.random() * 5);\r\n                this.cell.textContent = CELL_CONTENT_ARRAY[random_index];\r\n                this.cell.style.backgroundColor = CELL_BACKGROUND_ARRAY[random_index];\r\n\r\n                let arr = {\r\n                    id: id,\r\n                    title: CELL_CONTENT_ARRAY[random_index],\r\n                    indexX: j,\r\n                    indexY: i\r\n                }\r\n\r\n                this.arrayOfFruit.push(arr);\r\n                this.elementTable.appendChild(this.cell);\r\n                id++;\r\n            }\r\n        }\r\n        this.wrapper.appendChild(this.elementTable);\r\n        this.rootElement.appendChild(this.wrapper);\r\n    }\r\n}","import './index.scss';\r\nimport { Table } from './scripts/table.js';\r\n\r\nnew Table(document.querySelector('#root'));\r\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}"],"sourceRoot":""}